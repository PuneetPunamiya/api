// Code generated by goa v3.1.3, DO NOT EDIT.
//
// resource service
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package resource

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The resource service provides all resources information
type Service interface {
	// Get all Resources
	All(context.Context) (res []*Resource, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "resource"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"All"}

type Resource struct {
	// ID is the unique id of the category
	ID uint
	// Name of the Category
	Name string
	// Type of catalog where resource belongs
	Catalog *Catalog
	// Type of resource
	Type string
	// Description of resource
	Description string
	// Latest version o resource
	LatestVersion string
	// Tags related to resources
	Tags []*Tag
	// Rating of resource
	Rating uint
	// Date when resource was last updated
	LastUpdatedAt string
}

type Catalog struct {
	// ID is the unique id of the category
	ID uint
	// Type of support tier
	Type string
}

type Tag struct {
	// ID is the unique id of the tag
	ID uint
	// Name of the tag
	Name string
}

// MakeInternalError builds a goa.ServiceError from an error.
func MakeInternalError(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "internal-error",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
